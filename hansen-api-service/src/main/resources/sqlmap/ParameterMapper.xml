<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hansen.mapper.ParameterMapper">

    <sql id="fields">
        id,name,value,kind,createtime,updatetime,status,remark,title,groupType
    </sql>

    <resultMap id="map" type="HashMap">
        <result column=""></result>
    </resultMap>

    <sql id="table">base_parameter</sql>

    <sql id="selector">
        SELECT
        <include refid="fields"/>
        FROM
        <include refid="table"/>
    </sql>

    <sql id="condition">
        <where>
            <if test="model.name != null and model.name != ''">name=#{model.name}</if>
            <if test="model.value != null and model.value != ''">and value=#{model.value}</if>
            <if test="model.kind != null">and kind=#{model.kind}</if>
            <if test="model.status != null and model.status != ''">and status=#{model.status}</if>
            <if test="model.remark != null and model.remark != ''">and remark=#{model.remark}</if>
            <if test="model.title != null and model.title != ''">and title=#{model.title}</if>
        </where>
    </sql>

    <select id="readById" resultType="Parameter">
        <include refid="selector"/>
        where id=#{id} limit 1;
    </select>

    <select id="readList" resultType="Parameter">
        <include refid="selector"/>
        <include refid="condition"/>
        limit #{startRow}, #{pageSize};
    </select>

    <select id="readOne" resultType="Parameter">
        <include refid="selector"/>
        <include refid="condition"/>
        limit 1;
    </select>

    <select id="readCount" resultType="int">
        select count(1) from
        <include refid="table"/>
        <include refid="condition"/>
    </select>

    <insert id="create" useGeneratedKeys="true" keyProperty="id">
        insert into <include refid="table"/>(
        <trim  suffixOverrides="," >
            <if test="model.id!= null  and model.id!=''">
                id,
            </if>
            <if test="model.name!= null  and model.name!=''">
                name,
            </if>
            <if test="model.value!= null  and model.value!=''">
                value,
            </if>
            <if test="model.kind!= null  and model.kind!=''">
                kind,
            </if>
            <if test="model.title!= null  and model.title!=''">
                title,
            </if>
            <if test="model.remark!= null  and model.remark!=''">
                remark,
            </if>
            <if test="model.createTime!= null  and model.createTime!=''">
                createTime,
            </if>
            <if test="model.updateTime!= null  and model.updateTime!=''">
                updateTime,
            </if>
            <if test="model.status!= null  and model.status!=''">
                status,
            </if>
            <if test="model.remark!= null  and model.remark!=''">
                remark,
            </if>
            <if test="model.groupType!= null  and model.groupType!=''">
                groupType,
            </if>
        </trim>
        )
        values(
        <trim  suffixOverrides="," >

            <if test="model.id!= null  and model.id!=''">
                #{model.id},
            </if>
            <if test="model.name!= null  and model.name!=''">
                #{model.name},
            </if>
            <if test="model.value!= null  and model.value!=''">
                #{model.value},
            </if>
            <if test="model.kind!= null  and model.kind!=''">
                #{model.kind},
            </if>
            <if test="model.title!= null  and model.title!=''">
                #{model.title},
            </if>
            <if test="model.remark!= null  and model.remark!=''">
                #{model.remark},
            </if>
            <if test="model.createTime!= null  and model.createTime!=''">
                #{model.createTime},
            </if>
            <if test="model.updateTime!= null  and model.updateTime!=''">
                #{model.updateTime},
            </if>
            <if test="model.status!= null  and model.status!=''">
                #{model.status},
            </if>
            <if test="model.remark!= null  and model.remark!=''">
                #{model.remark},
            </if>
            <if test="model.groupType!= null  and model.groupType!=''">
                #{model.groupType},
            </if>
        </trim>
        );
    </insert>

    <update id="updateById">
        update
        <include refid="table"/>
        <set>
            <if test="model.name != null and model.name !=''">name= #{model.name},</if>
            <if test="model.value != null and model.value !=''">value= #{model.value},</if>
            <if test="model.kind != null and model.kind !=''">kind= #{model.kind},</if>
            <if test="model.updatetime != null and model.updatetime !=''">updatetime= #{model.updatetime},</if>
            <if test="model.remark != null and model.remark !=''">remark= #{model.remark},</if>
            <if test="model.status != null and model.status !=''">status= #{model.status},</if>
            <if test="model.title != null and model.title !=''">title= #{model.title},</if>
            <if test="model.groupType != null and model.groupType !=''">groupType= #{model.groupType},</if>
            updateTime=now()
        </set>
        where id=#{id}
    </update>

    <update id="deleteById">
        update
        <include refid="table"/>
        set status = 0,updateTime=now() where id = #{id}
    </update>

    <!-- 查询所有系统参数 -->
    <select id="getList" resultType="Parameter">
        <include refid="selector"/>
    </select>

</mapper>


