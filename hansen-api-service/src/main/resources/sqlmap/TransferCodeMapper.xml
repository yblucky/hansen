<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mapper.TransferCodeMapper">

	<sql id="fields">
		sendUserNick,receviceUserNick,sendUserId,receviceUserId,type,transferNo,createTime,updateTime,status,remark
	</sql>

	<sql id="fields_id">
		id,<include refid="fields"/>
	</sql>

	<sql id="table_name">base_transfer_code</sql>

	<sql id="selector">
		select <include refid="fields_id"/> from <include refid="table_name"/>
	</sql>

	<sql id="condition">
		<where>
			<if test="model.sendUserNick != null and model.sendUserNick != ''">sendUserNick=#{model.sendUserNick}</if>
			<if test="model.receviceUserNick != null and model.receviceUserNick != ''">and receviceUserNick=#{model.receviceUserNick}</if>
			<if test="model.sendUserId != null and model.sendUserId != ''">and sendUserId=#{model.sendUserId}</if>
			<if test="model.receviceUserId != null and model.receviceUserId != ''">and receviceUserId=#{model.receviceUserId}</if>
			<if test="model.type != null">and type=#{model.type}</if>
			<if test="model.transferNo != null">and transferNo=#{model.transferNo}</if>
			<if test="model.status != null">and status=#{model.status}</if>
			<if test="model.remark != null and model.remark != ''">and remark=#{model.remark}</if>
		</where>
	</sql>

	<insert id="create" useGeneratedKeys="true" keyProperty="id">
		insert into <include refid="table_name"/>(<include refid="fields_id"/>)
		values(#{id},#{sendUserNick},#{receviceUserNick},#{sendUserId},#{receviceUserId},#{type},#{transferNo},now(),now(),#{status},#{remark});
	</insert>

	<select id="readById" resultType="com.model.TransferCode">
		<include refid="selector"/> where id=#{id}  limit 1;
	</select>



	<select id="readCountByUserId" resultType="Integer">
		 SELECT COUNT(id) FROM  <include refid="table_name"/>
		  <where>
			  (receviceUserId=#{userId} OR sendUserId=#{userId})
			  <if test="codeType == 1">
				  AND (type = 1 OR type = 20 OR type = 21 OR type = 22 OR  type=23)
			  </if>
			  <if test="codeType == 2">
				  AND (type = 2 OR type = 10 OR type = 11 OR type = 12)
			  </if>
		  </where>
	</select>


	<select id="readListByUserId" resultType="com.model.TransferCode">
		<include refid="selector"/>
		<where>
			(receviceUserId=#{userId} OR sendUserId=#{userId})
			<if test="codeType == 1">
				AND (type = 1 OR type = 20 OR type = 21 OR type = 22)
			</if>
			<if test="codeType == 2">
				AND (type = 2 OR type = 10 OR type = 11 OR type = 12)
			</if>
		</where>
		  ORDER BY createTime desc limit #{startRow}, #{pageSize};
	</select>


	<select id="readList" resultType="com.model.TransferCode">
		<include refid="selector"/> <include refid="condition"/> limit #{startRow}, #{pageSize};
	</select>

	<select id="readOne" resultType="com.model.TransferCode">
		<include refid="selector"/> <include refid="condition"/> limit 1;
	</select>

	<select id="readCount" resultType="int">
		select count(1) from <include refid="table_name"/> <include refid="condition"/>
	</select>

	<update id="updateById">
		update <include refid="table_name"/>
		<set>
			<if test="model.sendUserNick != null and model.sendUserNick !=''">sendUserNick= #{model.sendUserNick},</if>
			<if test="model.receviceUserNick != null and model.receviceUserNick !=''">receviceUserNick= #{model.receviceUserNick},</if>
			<if test="model.sendUserId != null and model.sendUserId !=''">sendUserId= #{model.sendUserId},</if>
			<if test="model.receviceUserId != null and model.receviceUserId !=''">receviceUserId= #{model.receviceUserId},</if>
			<if test="model.type != null">type= #{model.type},</if>
			<if test="model.transferNo != null">transferNo= #{model.transferNo},</if>
			<if test="model.status != null">status= #{model.status},</if>
			<if test="model.remark != null and model.remark !=''">remark= #{model.remark},</if>
			updateTime=now()
		</set>
		where id=#{id}
	</update>

	<update id="deleteById">
		update <include refid="table_name"/> set status = 0,updateTime=now() where id = #{id}
	</update>
</mapper>



