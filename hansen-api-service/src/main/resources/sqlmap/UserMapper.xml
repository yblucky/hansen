<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mapper.UserMapper">

	<sql id="fields">
		uid,unionId,phone,loginName,email,nickName,userName,sex,salt,headImgUrl,loginTime,openId,payWord,password,firstReferrer,secondReferrer,grade,cardGrade,releaseTime,equityAmt,payAmt,tradeAmt,insuranceAmt,maxProfits,sumProfits,historySumProfits,cashOutProfits,contactUserId,activeCodeNo,registerCodeNo,remainTaskNo,createType,createTime,updateTime,status,remark
	</sql>

	<sql id="fields_id">
		id,<include refid="fields"/>
	</sql>

	<sql id="table_name">base_user</sql>

	<sql id="selector">
		select <include refid="fields_id"/> from <include refid="table_name"/>
	</sql>

	<sql id="condition">
		<where>
			<if test="model.id != null">id=#{model.id}</if>
			<if test="model.createType != null">createType=#{model.createType}</if>
			<if test="model.remainTaskNo != null">remainTaskNo=#{model.remainTaskNo}</if>
			<if test="model.uid != null">uid=#{model.uid}</if>
			<if test="model.unionId != null and model.unionId != ''">and unionId=#{model.unionId}</if>
			<if test="model.phone != null and model.phone != ''">and phone=#{model.phone}</if>
			<if test="model.loginName != null and model.loginName != ''">and loginName=#{model.loginName}</if>
			<if test="model.email != null and model.email != ''">and email=#{model.email}</if>
			<if test="model.nickName != null and model.nickName != ''">and nickName=#{model.nickName}</if>
			<if test="model.sex != null">and sex=#{model.sex}</if>
			<if test="model.salt != null and model.salt != ''">and salt=#{model.salt}</if>
			<if test="model.headImgUrl != null and model.headImgUrl != ''">and headImgUrl=#{model.headImgUrl}</if>
			<if test="model.loginTime != null">and loginTime=#{model.loginTime}</if>
			<if test="model.openId != null and model.openId != ''">and openId=#{model.openId}</if>
			<if test="model.payWord != null and model.payWord != ''">and payWord=#{model.payWord}</if>
			<if test="model.password != null and model.password != ''">and password=#{model.password}</if>
			<if test="model.firstReferrer != null and model.firstReferrer != ''">and firstReferrer=#{model.firstReferrer}</if>
			<if test="model.secondReferrer != null and model.secondReferrer != ''">and secondReferrer=#{model.secondReferrer}</if>
			<if test="model.grade != null  and model.grade != 0">and grade=#{model.grade}</if>
			<if test="model.cardGrade != null">and cardGrade=#{model.cardGrade}</if>
			<if test="model.releaseTime != null and model.releaseTime != ''">and releaseTime=#{model.releaseTime}</if>
			<if test="model.equityAmt != null">and equityAmt=#{model.equityAmt}</if>
			<if test="model.payAmt != null">and payAmt=#{model.payAmt}</if>
			<if test="model.tradeAmt != null">and tradeAmt=#{model.tradeAmt}</if>
			<if test="model.maxProfits != null">and maxProfits=#{model.maxProfits}</if>
			<if test="model.sumProfits != null">and sumProfits=#{model.sumProfits}</if>
			<if test="model.historySumProfits != null">and historySumProfits=#{model.historySumProfits}</if>
			<if test="model.cashOutProfits != null">and cashOutProfits=#{model.cashOutProfits}</if>
			<if test="model.contactUserId != null and model.contactUserId != ''">and contactUserId=#{model.contactUserId}</if>
			<if test="model.activeCodeNo != null">and activeCodeNo=#{model.activeCodeNo}</if>
			<if test="model.registerCodeNo != null">and registerCodeNo=#{model.registerCodeNo}</if>
			<if test="model.status != null">and status=#{model.status}</if>
			<if test="model.remark != null and model.remark != ''">and remark=#{model.remark}</if>
			<if test="model.insuranceAmt != null and model.insuranceAmt != ''">and insuranceAmt=#{model.insuranceAmt}</if>
		</where>
	</sql>

	<insert id="create" useGeneratedKeys="true" keyProperty="id">
		insert into <include refid="table_name"/>(<include refid="fields_id"/>)
		values(#{id},#{uid},#{unionId},#{phone},#{loginName},#{email},#{nickName},#{userName},#{sex},#{salt},#{headImgUrl},#{loginTime},#{openId},#{payWord},#{password},#{firstReferrer},#{secondReferrer},#{grade},#{cardGrade},#{releaseTime},#{equityAmt},#{payAmt},#{tradeAmt},#{insuranceAmt},#{maxProfits},#{sumProfits},#{historySumProfits},#{cashOutProfits},#{contactUserId},#{activeCodeNo},#{registerCodeNo},#{remainTaskNo},#{createType},now(),now(),#{status},#{remark});
	</insert>

	<select id="readById" resultType="User">
		<include refid="selector"/> where id=#{id}  limit 1;
	</select>

	<select id="readList" resultType="User">
		<include refid="selector"/> <include refid="condition"/> limit #{startRow}, #{pageSize};
	</select>

	<select id="readOne" resultType="User">
		<include refid="selector"/> <include refid="condition"/> limit 1;
	</select>

	<select id="readUserByLoginName" resultType="User">
		<include refid="selector"/>  WHERE    loginName=#{loginName} OR uid=#{loginName} OR phone=#{loginName}  limit 1;
	</select>


	<select id="readUserByUid" resultType="User">
		<include refid="selector"/>  WHERE    uid=#{uid}   limit 1;
	</select>

	<select id="readCount" resultType="int">
		select count(1) from <include refid="table_name"/> <include refid="condition"/>
	</select>

	<select id="readUnActiceMoreThanDays" resultType="User">
		<include refid="selector"/>
		<![CDATA[
			 WHERE status=2 and payAmt<=0 and tradeAmt<=0 and equityAmt<=0 and remainTaskNo=0 and cardGrade=1 and grade=0  and activeCodeNo=0 and registerCodeNo=0 and  (TO_DAYS(NOW()) - TO_DAYS(createTime)) >=2
		]]>
	</select>

	<update id="updateById">
		update <include refid="table_name"/>
		<set>
			<if test="model.uid != null">uid= #{model.uid},</if>
			<if test="model.createType != null and model.createType !=''">remainTaskNo= #{model.createType},</if>
			<if test="model.remainTaskNo != null and model.remainTaskNo !=''">remainTaskNo= #{model.remainTaskNo},</if>
			<if test="model.unionId != null and model.unionId !=''">unionId= #{model.unionId},</if>
			<if test="model.phone != null and model.phone !=''">phone= #{model.phone},</if>
			<if test="model.loginName != null and model.loginName !=''">loginName= #{model.loginName},</if>
			<if test="model.email != null and model.email !=''">email= #{model.email},</if>
			<if test="model.nickName != null and model.nickName !=''">nickName= #{model.nickName},</if>
			<if test="model.sex != null">sex= #{model.sex},</if>
			<if test="model.salt != null and model.salt !=''">salt= #{model.salt},</if>
			<if test="model.headImgUrl != null and model.headImgUrl !=''">headImgUrl= #{model.headImgUrl},</if>
			<if test="model.loginTime != null">loginTime= #{model.loginTime},</if>
			<if test="model.openId != null and model.openId !=''">openId= #{model.openId},</if>
			<if test="model.payWord != null and model.payWord !=''">payWord= #{model.payWord},</if>
			<if test="model.password != null and model.password !=''">password= #{model.password},</if>
			<if test="model.firstReferrer != null and model.firstReferrer !=''">firstReferrer= #{model.firstReferrer},</if>
			<if test="model.secondReferrer != null and model.secondReferrer !=''">secondReferrer= #{model.secondReferrer},</if>
			<if test="model.grade != null  and model.grade != 0">grade= #{model.grade},</if>
			<if test="model.cardGrade != null  and model.cardGrade != 0">cardGrade= #{model.cardGrade},</if>
			<if test="model.releaseTime != null and model.releaseTime !=''">releaseTime= #{model.releaseTime},</if>
			<if test="model.equityAmt != null">equityAmt= #{model.equityAmt},</if>
			<if test="model.payAmt != null">payAmt= #{model.payAmt},</if>
			<if test="model.tradeAmt != null">tradeAmt= #{model.tradeAmt},</if>
			<if test="model.maxProfits != null">maxProfits= #{model.maxProfits},</if>
			<if test="model.sumProfits != null">sumProfits= #{model.sumProfits},</if>
			<if test="model.historySumProfits != null">historySumProfits= #{model.historySumProfits},</if>
			<if test="model.cashOutProfits != null">cashOutProfits= #{model.cashOutProfits},</if>
			<if test="model.contactUserId != null and model.contactUserId !=''">contactUserId= #{model.contactUserId},</if>
			<if test="model.activeCodeNo != null">activeCodeNo= #{model.activeCodeNo},</if>
			<if test="model.registerCodeNo != null">registerCodeNo= #{model.registerCodeNo},</if>
			<if test="model.status != null">status= #{model.status},</if>
			<if test="model.remark != null and model.remark !=''">remark= #{model.remark},</if>
			<if test="model.insuranceAmt != null and model.insuranceAmt !=''">insuranceAmt= #{model.insuranceAmt},</if>
			updateTime=now()
		</set>
		where id=#{id}
	</update>

	<update id="deleteById">
		update <include refid="table_name"/> set status = 0,updateTime=now() where id = #{id}
	</update>

	<update id="updateEquityAmtByUserId">
		update <include refid="table_name"/> set equityAmt = equityAmt + #{equityAmt},updateTime=now() where id = #{id} and (equityAmt + #{equityAmt})>0
	</update>

	<update id="updateTradeAmtByUserId">
		update <include refid="table_name"/> set tradeAmt = tradeAmt + #{tradeAmt},updateTime=now() where id = #{id} and (tradeAmt + #{tradeAmt})>=0
	</update>

	<update id="updatePayAmtByUserId">
		update <include refid="table_name"/> set payAmt = payAmt + #{payAmt},updateTime=now() where id = #{id} and (payAmt + #{payAmt})>=0
	</update>

	<update id="updateInsuranceAmtByUserId">
		 update <include refid="table_name"/> set insuranceAmt = insuranceAmt + #{insuranceAmt},updateTime=now() where id = #{id} and (insuranceAmt + #{insuranceAmt})>=0
	</update>


	<update id="updateSumProfitsByUserId">
		update <include refid="table_name"/> set sumProfits = sumProfits + #{sumProfits},updateTime=now() where id = #{id} and (sumProfits + #{sumProfits})>=0
	</update>


	<update id="updateHistorySumProfitsByUserId">
		update <include refid="table_name"/> set historySumProfits = historySumProfits + #{historySumProfits},updateTime=now() where id = #{id} and (historySumProfits + #{historySumProfits})>=0
	</update>


	<update id="updateInsuranceAmtCoverByUserId">
		update <include refid="table_name"/> set insuranceAmt =   #{insuranceAmt},updateTime=now() where id = #{id} and ( #{insuranceAmt})>=0
	</update>

	<update id="updateSumProfitsCoverByUserId">
		update <include refid="table_name"/> set sumProfits =  #{sumProfits},updateTime=now() where id = #{id} and ( #{sumProfits})>=0
	</update>

	<update id="updateMaxProfitsCoverByUserId">
		update <include refid="table_name"/> set maxProfits =   #{maxProfits},updateTime=now() where id = #{id} and (  #{maxProfits})>=0
	</update>


	<update id="updateMaxProfitsByUserId">
		update <include refid="table_name"/> set maxProfits = maxProfits + #{maxProfits},updateTime=now() where id = #{id} and (maxProfits + #{maxProfits})>=0
	</update>

	<update id="updateCardGradeByUserId">
		update <include refid="table_name"/> set cardGrade = cardGrade ,updateTime=now() where id = #{id}
	</update>

	<update id="updateUserActiveCode">
		update <include refid="table_name"/> set activeCodeNo = activeCodeNo+#{activeCodeNo} ,updateTime=now() where id = #{id} and (activeCodeNo + #{activeCodeNo})>=0
	</update>

	<update id="updateUserRegisterCode">
		update <include refid="table_name"/> set registerCodeNo = registerCodeNo+#{registerCodeNo} ,updateTime=now() where id = #{id} and (registerCodeNo + #{registerCodeNo})>=0
	</update>


	<update id="updateUserRemainTaskNo">
		update <include refid="table_name"/> set remainTaskNo = remainTaskNo+#{remainTaskNo} ,updateTime=now() where id = #{id} and (remainTaskNo + #{remainTaskNo})>=0
	</update>

	<update id="updateUserStatusByUserId">
		update <include refid="table_name"/> set status = #{status} ,updateTime=now() where id = #{id}
	</update>

	<update id="updateUserCardGradeByUserId">
		update <include refid="table_name"/> set cardGrade = #{cardGrade} ,updateTime=now() where id = #{id}
	</update>

	<update id="updateUserGradeByUserId">
		update <include refid="table_name"/> set grade = #{grade} ,updateTime=now() where id = #{id}
	</update>

	<update id="clearUnActiveUserWithIds" parameterType="Integer">
		update
		<include refid="table_name"/>
		set updateTime=now(),remark='超时未激活，账户被清除'
		<if test="list!=null">
			,status=7 where id in
			<foreach collection="list" index="index" item="item" separator="," open="(" close=")">
				#{item}
			</foreach>
		</if>
	</update>
</mapper>



