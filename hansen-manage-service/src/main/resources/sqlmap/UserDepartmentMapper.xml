<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mappers.UserDepartmentMapper">

	<sql id="fields">
		userId,uid,performance,grade,createTime,updateTime,status,remark,parentUserId,nickName
	</sql>

	<sql id="fields_id">
		id,<include refid="fields"/>
	</sql>

	<sql id="table_name">base_user_department</sql>

	<sql id="selector">
		select <include refid="fields_id"/> from <include refid="table_name"/>
	</sql>

	<sql id="condition">
		<where>
			<if test="model.userId != null and model.userId != ''">userId=#{model.userId}</if>
			<if test="model.uid != null">and uid=#{model.uid}</if>
			<if test="model.performance != null">and performance=#{model.performance}</if>
			<if test="model.status != null">and status=#{model.status}</if>
			<if test="model.remark != null and model.remark != ''">and remark=#{model.remark}</if>
			<if test="model.grade != null and model.grade != ''">and grade=#{model.grade}</if>

		</where>
	</sql>

	<insert id="create" useGeneratedKeys="true" keyProperty="id">
		insert into <include refid="table_name"/>(
		<trim  suffixOverrides="," >
			<if test="model.id!= null  and model.id!=''">
				id,
			</if>
			<if test="model.userId!= null  and model.userId!=''">
				userId,
			</if>
			<if test="model.uid!= null  and model.uid!=''">
				uid,
			</if>
			<if test="model.performance!= null  and model.performance!=''">
				performance,
			</if>
			<if test="model.parentUserId!= null  and model.parentUserId!=''">
				parentUserId,
			</if>
			<if test="model.createTime!= null  and model.createTime!=''">
				createTime,
			</if>
			<if test="model.updateTime!= null  and model.updateTime!=''">
				updateTime,
			</if>
			<if test="model.status!= null  and model.status!=''">
				status,
			</if>
			<if test="model.remark!= null  and model.remark!=''">
				remark,
			</if>
			<if test="model.grade!= null  and model.grade!=''">
				grade,
			</if>
			<if test="model.nickName!= null  and model.nickName!=''">
				nickName,
			</if>
		</trim>
		)
		values(
		<trim  suffixOverrides="," >

			<if test="model.id!= null  and model.id!=''">
				#{model.id},
			</if>
			<if test="model.userId!= null  and model.userId!=''">
				#{model.userId},
			</if>
			<if test="model.uid!= null  and model.uid!=''">
				#{model.uid},
			</if>
			<if test="model.performance!= null  and model.performance!=''">
				#{model.performance},
			</if>
			<if test="model.parentUserId!= null  and model.parentUserId!=''">
				#{model.parentUserId},
			</if>
			<if test="model.createTime!= null  and model.createTime!=''">
				#{model.createTime},
			</if>
			<if test="model.updateTime!= null  and model.updateTime!=''">
				#{model.updateTime},
			</if>
			<if test="model.status!= null  and model.status!=''">
				#{model.status},
			</if>
			<if test="model.remark!= null  and model.remark!=''">
				#{model.remark},
			</if>
			<if test="model.grade!= null  and model.grade!=''">
				#{model.grade},
			</if>
			<if test="model.nickName!= null  and model.nickName!=''">
				#{model.nickName},
			</if>
		</trim>
		);
	</insert>

	<select id="readById" resultType="UserDepartment">
		<include refid="selector"/> where id=#{id}  limit 1;
	</select>

	<select id="readList" resultType="UserDepartment">
		<include refid="selector"/> <include refid="condition"/> limit #{startRow}, #{pageSize};
	</select>

	<select id="readOne" resultType="UserDepartment">
		<include refid="selector"/> <include refid="condition"/> limit 1;
	</select>

	<select id="readCount" resultType="int">
		select count(1) from <include refid="table_name"/> <include refid="condition"/>
	</select>

	<update id="updateById">
		update <include refid="table_name"/>
		<set>
			<if test="model.userId != null and model.userId !=''">userId= #{model.userId},</if>
			<if test="model.uid != null">uid= #{model.uid},</if>
			<if test="model.performance != null">performance= #{model.performance},</if>
			<if test="model.status != null">status= #{model.status},</if>
			<if test="model.remark != null and model.remark !=''">remark= #{model.remark},</if>
			<if test="model.grade != null and model.grade !=''">grade= #{model.grade},</if>
			updateTime=now()
		</set>
		where id=#{id}
	</update>

	<update id="deleteById">
		update <include refid="table_name"/> set status = 0,updateTime=now() where id = #{id}
	</update>

	<select id="getDirectTeamList" resultType="UserDepartment">
		select <include refid="fields_id"/> from <include refid="table_name"/> as a
		INNER JOIN base_user as b on a.userId = b.id and a.parentUserId = #{parentUserId}  and   a.parentUserId=#{parentUserId} and a.status = 1
		order by a.performance desc
	</select>

	<select id="getSumAmt" resultType="java.lang.Double">
		select sum(performance) sumAmt from <include refid="table_name"/> as a
		INNER JOIN base_user as b on a.userId = b.id and a.parentUserId = #{parentUserId} and b.contactUserId = a.id and a.status = 1
	</select>

	<update id="updatePerformanceByUserId">
		update <include refid="table_name"/> set performance = performance + #{performance},updateTime=now() where userId = #{userId} and (performance + #{performance})>0
	</update>

	<update id="updatePerformanceByUserId">
		update <include refid="table_name"/> set performance = performance + #{performance},updateTime=now() where userId = #{userId} and (performance + #{performance})>0
	</update>
</mapper>



